{"ast":null,"code":"import axios from \"axios\";\nimport { loginUserSuccess } from \"./loginActions\";\nexport const signupUser = (email, password) => {\n  return function (dispatch) {\n    dispatch(signupUserStart());\n    const data = {\n      email,\n      password,\n      returnSecureToken: true\n    };\n    axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyChBKn5Qe1tX7B43OsRAWobwKikVPyGPpg\", data).then(result => {\n      // LocalStorage ruu hadgalna\n      const token = result.data.idToken;\n      const userId = result.data.localId;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"userId\", userId);\n      dispatch(signupUserSuccess(token, userId));\n    }).catch(err => {\n      dispatch(signupUserError(err));\n    });\n  };\n};\nexport const signupUserStart = () => {\n  return {\n    type: \"SIGNUP_USER_START\"\n  };\n};\nexport const signupUserSuccess = (token, userId) => {\n  return {\n    type: \"SIGNUP_USER_SUCCESS\",\n    token,\n    userId\n  };\n};\nexport const signupUserError = error => {\n  return {\n    type: \"SIGNUP_USER_ERROR\",\n    error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  localStorage.removeItem(\"expireDate\");\n  localStorage.removeItem(\"refreshToken\");\n  return {\n    type: \"LOGOUT\"\n  };\n};\nexport const autoLogoutAfterMillisec = ms => {\n  return function (dispatch) {\n    // token shinechleh code\n    // axios\n    //   .post(\n    //     \"https://securetoken.googleapis.com/v1/token?key=AIzaSyCEmDZW6k2XJlQritKoYeJG14ExYa1rRSM\",\n    //     {\n    //       grant_type: \"refresh_token\",\n    //       refresh_token: localStorage.get(\"refresh_token\")\n    //     }\n    //   )\n    //   .then(result => {\n    //     const token = result.data.id_token;\n    //     const userId = result.data.user_id;\n    //     const token = result.data.idToken;\n    //     const userId = result.data.localId;\n    //     const expiresIn = result.data.expiresIn;\n    //     const expireDate = new Date(new Date().getTime() + expiresIn * 1000);\n    //     const refreshToken = result.data.refreshToken;\n    //     localStorage.setItem(\"token\", token);\n    //     localStorage.setItem(\"userId\", userId);\n    //     localStorage.setItem(\"expireDate\", expireDate);\n    //     localStorage.setItem(\"refreshToken\", refreshToken);\n    //     dispatch(loginUserSuccess(token, userId));\n    //   })\n    //   .catch(err => {\n    //     dispatch(signupUserError(err));\n    //   });\n\n    // avtomat logout\n    setTimeout(() => {\n      dispatch(logout());\n    }, ms);\n  };\n};","map":{"version":3,"names":["axios","loginUserSuccess","signupUser","email","password","dispatch","signupUserStart","data","returnSecureToken","post","then","result","token","idToken","userId","localId","localStorage","setItem","signupUserSuccess","catch","err","signupUserError","type","error","logout","removeItem","autoLogoutAfterMillisec","ms","setTimeout"],"sources":["/Users/macbookpro2020/1234.mn/ React/burger copy/src/redux/actions/signupActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { loginUserSuccess } from \"./loginActions\";\r\nexport const signupUser = (email, password) => {\r\n  return function (dispatch) {\r\n    dispatch(signupUserStart());\r\n\r\n    const data = {\r\n      email,\r\n      password,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    axios\r\n      .post(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyChBKn5Qe1tX7B43OsRAWobwKikVPyGPpg\",\r\n        data\r\n      )\r\n      .then((result) => {\r\n        // LocalStorage ruu hadgalna\r\n        const token = result.data.idToken;\r\n        const userId = result.data.localId;\r\n\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"userId\", userId);\r\n\r\n        dispatch(signupUserSuccess(token, userId));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(signupUserError(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const signupUserStart = () => {\r\n  return {\r\n    type: \"SIGNUP_USER_START\",\r\n  };\r\n};\r\n\r\nexport const signupUserSuccess = (token, userId) => {\r\n  return {\r\n    type: \"SIGNUP_USER_SUCCESS\",\r\n    token,\r\n    userId,\r\n  };\r\n};\r\n\r\nexport const signupUserError = (error) => {\r\n  return {\r\n    type: \"SIGNUP_USER_ERROR\",\r\n    error,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"expireDate\");\r\n  localStorage.removeItem(\"refreshToken\");\r\n  return {\r\n    type: \"LOGOUT\",\r\n  };\r\n};\r\n\r\nexport const autoLogoutAfterMillisec = (ms) => {\r\n  return function (dispatch) {\r\n    // token shinechleh code\r\n    // axios\r\n    //   .post(\r\n    //     \"https://securetoken.googleapis.com/v1/token?key=AIzaSyCEmDZW6k2XJlQritKoYeJG14ExYa1rRSM\",\r\n    //     {\r\n    //       grant_type: \"refresh_token\",\r\n    //       refresh_token: localStorage.get(\"refresh_token\")\r\n    //     }\r\n    //   )\r\n    //   .then(result => {\r\n    //     const token = result.data.id_token;\r\n    //     const userId = result.data.user_id;\r\n    //     const token = result.data.idToken;\r\n    //     const userId = result.data.localId;\r\n    //     const expiresIn = result.data.expiresIn;\r\n    //     const expireDate = new Date(new Date().getTime() + expiresIn * 1000);\r\n    //     const refreshToken = result.data.refreshToken;\r\n    //     localStorage.setItem(\"token\", token);\r\n    //     localStorage.setItem(\"userId\", userId);\r\n    //     localStorage.setItem(\"expireDate\", expireDate);\r\n    //     localStorage.setItem(\"refreshToken\", refreshToken);\r\n    //     dispatch(loginUserSuccess(token, userId));\r\n    //   })\r\n    //   .catch(err => {\r\n    //     dispatch(signupUserError(err));\r\n    //   });\r\n\r\n    // avtomat logout\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, ms);\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,gBAAgB;AACjD,OAAO,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC7C,OAAO,UAAUC,QAAQ,EAAE;IACzBA,QAAQ,CAACC,eAAe,CAAC,CAAC,CAAC;IAE3B,MAAMC,IAAI,GAAG;MACXJ,KAAK;MACLC,QAAQ;MACRI,iBAAiB,EAAE;IACrB,CAAC;IAEDR,KAAK,CACFS,IAAI,CACH,uGAAuG,EACvGF,IACF,CAAC,CACAG,IAAI,CAAEC,MAAM,IAAK;MAChB;MACA,MAAMC,KAAK,GAAGD,MAAM,CAACJ,IAAI,CAACM,OAAO;MACjC,MAAMC,MAAM,GAAGH,MAAM,CAACJ,IAAI,CAACQ,OAAO;MAElCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;MACpCI,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEH,MAAM,CAAC;MAEtCT,QAAQ,CAACa,iBAAiB,CAACN,KAAK,EAAEE,MAAM,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAK;MACdf,QAAQ,CAACgB,eAAe,CAACD,GAAG,CAAC,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;AACH,CAAC;AAED,OAAO,MAAMd,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO;IACLgB,IAAI,EAAE;EACR,CAAC;AACH,CAAC;AAED,OAAO,MAAMJ,iBAAiB,GAAGA,CAACN,KAAK,EAAEE,MAAM,KAAK;EAClD,OAAO;IACLQ,IAAI,EAAE,qBAAqB;IAC3BV,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMO,eAAe,GAAIE,KAAK,IAAK;EACxC,OAAO;IACLD,IAAI,EAAE,mBAAmB;IACzBC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1BR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;EAChCT,YAAY,CAACS,UAAU,CAAC,QAAQ,CAAC;EACjCT,YAAY,CAACS,UAAU,CAAC,YAAY,CAAC;EACrCT,YAAY,CAACS,UAAU,CAAC,cAAc,CAAC;EACvC,OAAO;IACLH,IAAI,EAAE;EACR,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,uBAAuB,GAAIC,EAAE,IAAK;EAC7C,OAAO,UAAUtB,QAAQ,EAAE;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACAuB,UAAU,CAAC,MAAM;MACfvB,QAAQ,CAACmB,MAAM,CAAC,CAAC,CAAC;IACpB,CAAC,EAAEG,EAAE,CAAC;EACR,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}