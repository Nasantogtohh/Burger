{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro2020/1234.mn/ React/burger/src/pages/ShippingPage/index.js\";\nimport React, { Component } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Burger from \"../../components/Burger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ShippingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredients: {\n        bacon: 0,\n        cheese: 0,\n        meat: 2,\n        salad: 1\n      }\n    };\n  }\n  componentDidMount() {\n    this.parseQueryParams();\n  }\n  componentDidUpdate(prevProps) {\n    // Check if location props changed (e.g., when navigating with React Router)\n    if (prevProps.location.search !== this.props.location.search) {\n      this.parseQueryParams();\n    }\n  }\n  parseQueryParams() {\n    const query = new URLSearchParams(this.props.location.search);\n    const ingredients = {};\n    for (let param of query.entries()) {\n      // Check if the parameter name matches one of your ingredients\n      if (this.state.ingredients.hasOwnProperty(param[0])) {\n        // Convert the parameter value to a number (assuming they are numbers in the query)\n        ingredients[param[0]] = +param[1];\n      }\n    }\n    this.setState({\n      ingredients\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// Export using withRouter for class components (if you're using react-router-dom v5 or below)\n// import { withRouter } from \"react-router-dom\";\n// export default withRouter(ShippingPage);\n\nexport default ShippingPage;","map":{"version":3,"names":["React","Component","useLocation","Burger","jsxDEV","_jsxDEV","ShippingPage","constructor","props","state","ingredients","bacon","cheese","meat","salad","componentDidMount","parseQueryParams","componentDidUpdate","prevProps","location","search","query","URLSearchParams","param","entries","hasOwnProperty","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/macbookpro2020/1234.mn/ React/burger/src/pages/ShippingPage/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Burger from \"../../components/Burger\";\n\nclass ShippingPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredients: {\n        bacon: 0,\n        cheese: 0,\n        meat: 2,\n        salad: 1,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.parseQueryParams();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Check if location props changed (e.g., when navigating with React Router)\n    if (prevProps.location.search !== this.props.location.search) {\n      this.parseQueryParams();\n    }\n  }\n\n  parseQueryParams() {\n    const query = new URLSearchParams(this.props.location.search);\n    const ingredients = {};\n    for (let param of query.entries()) {\n      // Check if the parameter name matches one of your ingredients\n      if (this.state.ingredients.hasOwnProperty(param[0])) {\n        // Convert the parameter value to a number (assuming they are numbers in the query)\n        ingredients[param[0]] = +param[1];\n      }\n    }\n    this.setState({ ingredients });\n  }\n\n  render() {\n    return (\n      <div>\n        <Burger ingredients={this.state.ingredients} />\n      </div>\n    );\n  }\n}\n\n// Export using withRouter for class components (if you're using react-router-dom v5 or below)\n// import { withRouter } from \"react-router-dom\";\n// export default withRouter(ShippingPage);\n\nexport default ShippingPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,SAASL,SAAS,CAAC;EACnCM,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,WAAW,EAAE;QACXC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE,CAAC;QACTC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE;MACT;IACF,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB;EAEAC,kBAAkBA,CAACC,SAAS,EAAE;IAC5B;IACA,IAAIA,SAAS,CAACC,QAAQ,CAACC,MAAM,KAAK,IAAI,CAACZ,KAAK,CAACW,QAAQ,CAACC,MAAM,EAAE;MAC5D,IAAI,CAACJ,gBAAgB,CAAC,CAAC;IACzB;EACF;EAEAA,gBAAgBA,CAAA,EAAG;IACjB,MAAMK,KAAK,GAAG,IAAIC,eAAe,CAAC,IAAI,CAACd,KAAK,CAACW,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMV,WAAW,GAAG,CAAC,CAAC;IACtB,KAAK,IAAIa,KAAK,IAAIF,KAAK,CAACG,OAAO,CAAC,CAAC,EAAE;MACjC;MACA,IAAI,IAAI,CAACf,KAAK,CAACC,WAAW,CAACe,cAAc,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QACnD;QACAb,WAAW,CAACa,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAACA,KAAK,CAAC,CAAC,CAAC;MACnC;IACF;IACA,IAAI,CAACG,QAAQ,CAAC;MAAEhB;IAAY,CAAC,CAAC;EAChC;EAEAiB,MAAMA,CAAA,EAAG;IACP,oBACEtB,OAAA;MAAAuB,QAAA,eACEvB,OAAA,CAACF,MAAM;QAACO,WAAW,EAAE,IAAI,CAACD,KAAK,CAACC;MAAY;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAEV;AACF;;AAEA;AACA;AACA;;AAEA,eAAe1B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}